<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="emp"> <!-- parameterType은 생략가능, 생략됨 -->

   <select id="selectAll" resultMap="empMap">
         select
            *
         from
            emp
         order by
            emp_id
   	</select>
   <!-- 식별자의 경우 ${식별자} 홑따옴표 없이 삽입처리
   밑의 keyword의 경우 #{keyword}는 ||로 '%'를 연결  -->
   	<select id="search1" resultMap="empMap">
         select
            *
         from
            emp
         where
            ${searchType} like '%' || #{searchKeyword} || '%'
         order by
            emp_id
  	</select>
   
  	<select id="search2" resultMap="empMap">
         select
         	*
         from (
		         select
		            e.*,
		            decode(substr(emp_no, 8, 1), '1', '남', '3', '남', '여') gender
		         from
		            emp e
         )
         <!-- 
         	1. where절 몸통이 비어있다면, where키워드 제거
         	2. where 다음 바로 and/or가 오는 경우, and/or 제거
         
          -->
         <where>
         	<!-- and or 만 사용가능 (&& || 사용불가)-->
	         <if test="searchKeyword != null and searchKeyword != ''">
	            ${searchType} like '%' || #{searchKeyword} || '%'
	         </if>
	         <if test="gender != null and gender != ''">
	         and gender = #{gender}
	         </if>
	         <if test="salary != null and salary != ''">
	         	<choose>
	         	<!-- XML식 Escaping : CDATA section은 xml 문법이 아닌 문자 그대로 해석 -->
	         	<!-- 부등호는 <![CDATA[ 여기 ]]> 무조건 사용!안하면오류남 -->
	         		<when test="salaryCompare eq 'le'">
	         		and salary <![CDATA[ <= ]]> #{salary}
	         		</when>
	         		<when test="salaryCompare eq 'ge'">
	         		and salary <![CDATA[ >= ]]> #{salary}
	         		</when>
	         		<otherwise></otherwise>
	         	</choose>
	         	
	         </if>
	      </where>  
         order by
            emp_id
   	</select>
    <!-- 
  where
  	${searchType} like '%' || #{searchKeyword} || '%'
  	and gender = #{gender} 안됨
  	
  where
  	${searchType} like '%' || #{searchKeyword} || '%' 안됨
  	
  where
  	and gender = #{gender} 됨
  	
  where
  order by emp_id 됨
  -->
    
   <select id="selectJobList" resultType="map">
  	select
  		job_code "jobCode", 
  		job_name "jobName"
  	from
  		job
	order by
		job_code
  </select>
  
  <select id="selectdeptList" resultType="map">
  select
  		dept_id "deptCode", 
  		dept_title "deptTitle"
  	from
  		dept
	order by
		dept_id
  </select>
   
<!--    property는 java에서 쓰일 map의 키값 -->
   <resultMap type="map" id="empMap">
      <id column="emp_id" property="empId"/> <!-- pk -->   
      <result column="emp_name" property="empName"/> <!-- 나머지 컬럼 -->
      <result column="emp_no" property="empNo"/> 
      <result column="email" property="email"/> 
      <result column="phone" property="phone"/> 
      <result column="dept_code" property="deptCode"/> 
      <result column="job_code" property="jobCode"/> 
      <result column="sal_level" property="salLevel"/> 
      <result column="salary" property="salary"/> 
      <result column="bonus" property="bonus"/> 
      <result column="manager_id" property="managerId"/> 
      <result column="hire_date" property="hireDate"/> 
      <result column="quit_date" property="quitDate"/> 
      <result column="quit_yn" property="quitYN"/> 
      <result column="gender" property="gender"/> 
      
      <result column="job_name" property="jobName"/> 
      <result column="dept_title" property="deptTitle"/> 
      <result column="dept_id" property="deptId"/>
      
   </resultMap>
   
    <select id="search3" resultMap="empMap">
      select
         *
      from (
         select
            e.*,
            decode(substr(emp_no, 8, 1), '1', '남', '3', '남', '여') gender,
            (select job_name from job where job_code = e.job_code) job_name,
            (select dept_title from dept where dept_id = e.dept_code) dept_title
            <!-- nvl((select dept_title from dept where dept_id = e.dept_code),'인턴') dept_title -->
         from
            emp e
      )
      <!-- where job_name in ('J1', 'J2') -->
      <where>
         <if test="jobCodeArr != null">
         job_code in
            <foreach collection="jobCodeArr" item="jobCode" open="(" close=")" separator=",">
            #{jobCode}
            </foreach>
         </if>
         <if test="deptCodeArr != null">
          and nvl(dept_code, 'D0') in
           <foreach collection="deptCodeArr" item="deptCode" open="(" close=")" separator=",">
           #{deptCode}            
           </foreach>
         </if>   
         <if test="false">
  		<!-- nvl(dept_code,'D0') in ('D0', 'D1') -->
  		</if>
      </where>
   </select>
   

</mapper>